package find_the_difference_389;

//	Given two strings s and t which consist of only lowercase letters.
//	
//	String t is generated by random shuffling string s and then add one more letter at a random position.
//	
//	Find the letter that was added in t.

public class Solution {
	
	public static void main(String[] args) {
		Solution solution = new Solution();
		
		String[] testCasesS = {"abcd", "abcd"}; // e, d
		String[] testCasesT = {"abcde", "bcdad"};
		for(int i = 0; i < testCasesS.length; i++) {
			System.out.println(solution.findTheDifference(testCasesS[i], testCasesT[i]));	
		}
	}
	
	// Idea: Calculate the difference of sums of characacter values in s and t.
	public char findTheDifference(String s, String t) {
		int charSumS = 0;
		int charSumT = 0;
		
		for(char c : s.toCharArray()) {
			charSumS += c;
		}
		
		for(char c : t.toCharArray()) {
			charSumT += c;
		}
		
		return (char) (charSumT - charSumS);
	}
	
	// Idea: Track the occurance of each character.
	public char findTheDifference1(String s, String t) {
		int[] charCount = new int[26];
		
		for(int i = 0; i < s.length(); i++) {
			charCount[s.charAt(i) - 'a']++;
		}
		
		for(int i = 0; i < t.length(); i++) {
			int c = t.charAt(i) - 'a';
			if(charCount[c] == 0)
				return t.charAt(i);
			charCount[c]--;
		}
		
		return 0;
	}
}
